{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alex/dev/course/next/src/pages/list.tsx\";\nimport Link from 'next/link';\nexport default function List(_ref) {\n  var _this = this;\n\n  var ownersList = _ref.ownersList;\n  // const [owners, setOwners] = useState([]);\n  // useEffect(() => {\n  //   async function loadData() {\n  //     const response = await fetch('http://localhost:4001/vehicles');\n  //     const ownersList = await response.json();\n  //     setOwners(ownersList);\n  //   }\n  //   loadData();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ownersList === null || ownersList === void 0 ? void 0 : ownersList.map(function (e, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\".concat(e.vehicle, \"/\").concat(e.ownerName),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [\"Navigate to \", e.ownerName, \"'s \", e.vehicle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nList.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response, ownersList;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:4001/vehicles');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          ownersList = _context.sent;\n          return _context.abrupt(\"return\", {\n            ownersList: ownersList\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/alex/dev/course/next/src/pages/list.tsx"],"names":["Link","List","ownersList","map","e","index","vehicle","ownerName","getInitialProps","fetch","response","json"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAOA,eAAe,SAASC,IAAT,OAAuC;AAAA;;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,sBACE;AAAA,cACGA,UADH,aACGA,UADH,uBACGA,UAAU,CAAEC,GAAZ,CAAgB,UAACC,CAAD,EAAIC,KAAJ;AAAA,0BACf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,aAAMD,CAAC,CAACE,OAAR,cAAmBF,CAAC,CAACG,SAArB,CAAV;AAAA,iCACE;AAAA,uCACeH,CAAC,CAACG,SADjB,SAC+BH,CAAC,CAACE,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,eADe;AAAA,KAAhB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAzBuBJ,I;AA2BxBA,IAAI,CAACO,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACIC,KAAK,CAAC,gCAAD,CADT;;AAAA;AACbC,UAAAA,QADa;AAAA;AAAA,iBAEmCA,QAAQ,CAACC,IAAT,EAFnC;;AAAA;AAEbT,UAAAA,UAFa;AAAA,2CAGZ;AAACA,YAAAA,UAAU,EAAEA;AAAb,WAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import Link from 'next/link';\nimport {VehiclePerson} from '../../api/VehiclePerson';\n\nexport interface ListProps {\n    ownersList: VehiclePerson[] | undefined;\n}\n\nexport default function List({ownersList}: ListProps) {\n  // const [owners, setOwners] = useState([]);\n  // useEffect(() => {\n  //   async function loadData() {\n  //     const response = await fetch('http://localhost:4001/vehicles');\n  //     const ownersList = await response.json();\n  //     setOwners(ownersList);\n  //   }\n\n  //   loadData();\n  // }, []);\n  \n  return (\n    <div>\n      {ownersList?.map((e, index) => (\n        <div key={index}>\n          <Link href={`/${e.vehicle}/${e.ownerName}`}>\n            <a>\n              Navigate to {e.ownerName}'s {e.vehicle}\n            </a>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nList.getInitialProps = async () => {\n    const response = await fetch('http://localhost:4001/vehicles');\n    const ownersList: VehiclePerson[] | undefined = await response.json();\n    return {ownersList: ownersList}\n}\n"]},"metadata":{},"sourceType":"module"}