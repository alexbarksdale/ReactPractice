{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alex/dev/course/next/src/pages/[vehicle]/[person].tsx\";\nimport { useRouter } from 'next/router';\nexport default function Person({\n  ownersList\n}) {\n  const {\n    query\n  } = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(ownersList, null, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [query.person, \"'s \", query.vehicle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\nPerson.getInitialProps = async ctx => {\n  const {\n    query\n  } = ctx;\n  const response = await fetch(`http://localhost:4001/vehicles?ownerName=${query.person}&vehicle=${query.vehicle}`);\n  const ownersList = await response.json();\n  return {\n    ownersList: ownersList\n  };\n};","map":{"version":3,"sources":["/Users/alex/dev/course/next/src/pages/[vehicle]/[person].tsx"],"names":["useRouter","Person","ownersList","query","JSON","stringify","person","vehicle","getInitialProps","ctx","response","fetch","json"],"mappings":";;AACA,SAAQA,SAAR,QAAwB,aAAxB;AAOA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA2C;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAYH,SAAS,EAA3B;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAMI,IAAI,CAACC,SAAL,CAAeH,UAAf,EAA2B,IAA3B,EAAiC,CAAjC;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBAAKC,KAAK,CAACG,MAAX,SAAsBH,KAAK,CAACI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AASDN,MAAM,CAACO,eAAP,GAAyB,MAAOC,GAAP,IAAgC;AACrD,QAAM;AAAEN,IAAAA;AAAF,MAAYM,GAAlB;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CR,KAAK,CAACG,MAAO,YAAWH,KAAK,CAACI,OAAQ,EAAnF,CAA5B;AACA,QAAML,UAAU,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAzB;AAEA,SAAO;AAACV,IAAAA,UAAU,EAAEA;AAAb,GAAP;AACH,CAPD","sourcesContent":["import { NextPageContext } from 'next';\nimport {useRouter} from 'next/router';\nimport {VehiclePerson} from '../../../api/VehiclePerson';\n\nexport interface PersonProps {\n    ownersList?: VehiclePerson[];\n}\n\nexport default function Person({ownersList}: PersonProps) {\n    const { query } = useRouter();\n\n    return (\n        <div>\n            <pre>{JSON.stringify(ownersList, null, 4)}</pre>\n            <h1>{query.person}'s {query.vehicle}</h1>\n        </div>\n    )\n}\n\ninterface QueryContext extends NextPageContext {\n    query: {\n        person: string;\n        vehicle: string;\n   }\n}\n\nPerson.getInitialProps = async (ctx: NextPageContext) => {\n    const { query } = ctx;\n\n    const response = await fetch(`http://localhost:4001/vehicles?ownerName=${query.person}&vehicle=${query.vehicle}`);\n    const ownersList = await response.json();\n\n    return {ownersList: ownersList}\n}\n"]},"metadata":{},"sourceType":"module"}