{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alex/dev/course/next/src/pages/[vehicle]/[person].tsx\";\nimport { useRouter } from \"next/router\";\nexport default function Person({\n  ownersList\n}) {\n  const {\n    query\n  } = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(ownersList, null, 4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [query.person, \"'s \", query.vehicle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\nPerson.getInitialProps = async ctx => {\n  const {\n    query\n  } = ctx;\n  const response = await fetch(`http://localhost:4001/vehicles?ownerName=${query.person}&vehicle=${query.vehicle}`);\n  const ownersList = await response.json();\n  return {\n    ownersList: ownersList\n  };\n};","map":{"version":3,"sources":["/Users/alex/dev/course/next/src/pages/[vehicle]/[person].tsx"],"names":["useRouter","Person","ownersList","query","JSON","stringify","person","vehicle","getInitialProps","ctx","response","fetch","json"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AAOA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA6C;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAYH,SAAS,EAA3B;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAMI,IAAI,CAACC,SAAL,CAAeH,UAAf,EAA2B,IAA3B,EAAiC,CAAjC;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGC,KAAK,CAACG,MADT,SACoBH,KAAK,CAACI,OAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AASDN,MAAM,CAACO,eAAP,GAAyB,MAAOC,GAAP,IAAkC;AACzD,QAAM;AAAEN,IAAAA;AAAF,MAAYM,GAAlB;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,4CAA2CR,KAAK,CAACG,MAAO,YAAWH,KAAK,CAACI,OAAQ,EADxD,CAA5B;AAGA,QAAML,UAAU,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAzB;AAEA,SAAO;AAAEV,IAAAA,UAAU,EAAEA;AAAd,GAAP;AACD,CATD","sourcesContent":["import { NextPageContext } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { VehiclePerson } from \"../../../api/VehiclePerson\";\n\nexport interface PersonProps {\n  ownersList?: VehiclePerson[];\n}\n\nexport default function Person({ ownersList }: PersonProps) {\n  const { query } = useRouter();\n\n  return (\n    <div>\n      <pre>{JSON.stringify(ownersList, null, 4)}</pre>\n      <h1>\n        {query.person}'s {query.vehicle}\n      </h1>\n    </div>\n  );\n}\n\ninterface CustomPageContext extends NextPageContext {\n  query: {\n    person: string;\n    vehicle: string;\n  };\n}\n\nPerson.getInitialProps = async (ctx: CustomPageContext) => {\n  const { query } = ctx;\n\n  const response = await fetch(\n    `http://localhost:4001/vehicles?ownerName=${query.person}&vehicle=${query.vehicle}`\n  );\n  const ownersList = await response.json();\n\n  return { ownersList: ownersList };\n};\n"]},"metadata":{},"sourceType":"module"}